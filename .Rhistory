find.package("devtools")
install.packages("devtools")
find_rtools()
library(devtools)
library("devtools", lib.loc="~/R/win-library/3.1")
remove("devtools")
detach("package:devtools", unload=TRUE)
library("mime", lib.loc="~/R/win-library/3.1")
detach("package:mime", unload=TRUE)
remove("rtools")
find package("devtools")
find.package("devtools")
find_rtools()
library(devtools)
remove rtools
remove.rtools
find_rtools()
find.package("devtools")
library("evaluate", lib.loc="~/R/win-library/3.1")
detach("package:evaluate", unload=TRUE)
find.package("devtoos")
find.package("devtools")
find_rtools()
library(devtools)
library(devtools)
find_rtools()
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
pollutantmean <- function(monitordata, pollutant, id = 1:332)
{
monitordata <- "\\documents\\r course\\Homework 1\\specdata\\"
for (i in id)
fileread={read.csv(paste(monitordata,formatC(i,width=3,flag="0"),".csv",sep="")
}
pollutantmean <- function(monitordata, pollutant, id = 1:332)
{
monitordata <- "\\documents\\r course\\Homework 1\\specdata\\"
for (i in id)
fileread={read.csv(paste(monitordata,formatC(i,width=3,flag="0"),".csv",sep="")
}}
pollutantmean <- function(monitordata, pollutant, id = 1:332)
pollutantmean <- function(monitordata, pollutant, id = 1:332)
{
monitordata <- "\\documents\\r course\\Homework 1\\specdata\\"
for (i in id)
fileread={read.csv(paste(monitordata,formatC(i,width=3,flag="0"),".csv",sep="")
\
pollutantmean <- function(monitordata, pollutant, id = 1:332)
{
monitordata <- "\\documents\\r course\\Homework 1\\specdata\\"
for (i in id)
fileread={read.csv(paste(monitordata,formatC(i,width=3,flag="0"),".csv",sep=""))}
\
pollutantmean <- function(monitordata, pollutant, id = 1:332)
{
monitordata <- "\\documents\\r course\\Homework 1\\specdata\\"
for (i in id)
fileread={read.csv(paste(monitordata,formatC(i,width=3,flag="0"),".csv",sep=""))}
\
pollutantmean <- function(monitordata, pollutant, id = 1:332)
\
pollutantmean <- function(monitordata, pollutant, id = 1:332)
{
monitordata <- "\\documents\\r course\\Homework 1\\specdata\\"}
or (i in id)
fileread=read.csv(paste(monitordata,formatC(i,width=3,flag="0"),".csv",sep=""))
monitordata <- "\\documents\\r course\\Homework 1\\specdata\\"
or (i in id)
fileread=read.csv(paste(monitordata,formatC(i,width=3,flag="0"),".csv",sep=""))
for (i in id)
fileread=read.csv(paste(monitordata,formatC(i,width=3,flag="0"),".csv",sep=""))
pollutantmean <- function(monitordata, pollutant, id = 1:332)
monitordata <- "\\documents\\r course\\Homework 1\\specdata\\"
for (i in id)
fileread=read.csv(paste(monitordata,formatC(i,width=3,flag="0"),".csv",sep=""))
pollutantmean <- function(monitordata, pollutant, id = 1:332)
{
monitordata <- "\\documents\\r course\\Homework 1\\specdata\\"
for (i in id)
fileread=read.csv(paste(monitordata,formatC(i,width=3,flag="0"),".csv",sep=""))
}
pollutantmean <- function(monitordata,pollutant,id = 1:332)
{
monitordata <- "\\documents\\r course\\Homework 1\\specdata\\"
for (i in id)
fileread=read.csv(paste(monitordata,formatC(i,width=3,flag="0"),".csv",sep=""))
}
fileread=c(fileread),fileread[[pollutant]]
}
fileread=read.csv(paste(monitordata,formatC(i,width=3,flag="0"),".csv",sep="")
\
pollutantmean <- function(monitordata,pollutant,id = 1:332)
{
monitordata <- "\\documents\\r course\\Homework 1\\specdata\\"
for (i in id)
fileread=read.csv(paste(monitordata,formatC(i,width=3,flag="0"),".csv",sep=""))
}
pollutantmean <- function(specdata,pollutant,id=1:332)
{
specdata <- <- "\\documents\\r course\\Homework 1\\specdata\\"
data=numeric()
for(i in id)
{
newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(print(mean(data,na.rm=TRUE),digits=4))
}
pollutantmean <- function(specdata,pollutant,id=1:332)
{
specdata <- "\\documents\\r course\\Homework 1\\specdata\\"
data=numeric()
for(i in id)
{
newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[[pollutant]])
}
return(print(mean(data,na.rm=TRUE),digits=4))
}
pollutantmean <- function(specdata,pollutant,id=1:332)
specdata <- "\\documents\\r course\\Homework 1\\specdata\\"
data=numeric()
specdata
specdata()
pollutantmean <- function(specdata,pollutant,id=1:332)
{
specdata <- "\\documents\\r course\\Homework 1\\specdata\\"
data=numeric()
for(i in id)
{
newRead=read.csv(file="001.csv)",sep="")
data=c(data,newRead[[pollutant]])
}
return(print(mean(data,na.rm=TRUE),digits=4))
}
pollutantmean <- function(specdata,pollutant,id=1:332)
{
specdata <- "\\Users\\Jim\\Documents\\R Course\\Homework 1"
data=numeric()
for(i in id)
{
newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[pollutant])
}
return(print(mean(data,na.rm=TRUE),digits=4))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(specdata,pollutant,id=1:332)
{
specdata <- "\\Users\\Jim\\Documents\\R Course\\Homework 1\\"
data=numeric()
for(i in id)
{
newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[pollutant])
}
return(print(mean(data,na.rm=TRUE),digits=4))
}
pollutantmean("specdata", "sulfate", 1:10)
\
/
clr
pollutantmean <- function(specdata,pollutant,id=1:332)
{
specdata <- "\\Users\\Jim\\Documents\\R Course\\Homework 1\\specdata\\"
data=numeric()
for(i in id)
{
newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep="",na.rm=”True”))
data=c(data,newRead[pollutant])
}
return(print(mean(data,na.rm=TRUE),digits=4))
}
pollutantmean <- function(specdata,pollutant,id=1:332)
{
specdata <- "\\Users\\Jim\\Documents\\R Course\\Homework 1\\specdata\\"
data=numeric()
for(i in id)
{
newRead=read.csv(paste(specdata,formatC(i,width=3,flag="0"),".csv",sep=""))
data=c(data,newRead[pollutant])
}
return(print(mean(data,na.rm=FALSE),digits=4))
}
set.seed(9999)
lambda<-1
x<-seq(0,40, length 1000)
x<-seq(0,40,length 1000)
x <- seq(0,40,length=1000)
hist(x)
set.seed(1000)
lambda <- 0.2
n <- 40
nsim <- 1000
xbar <- rep(0,nsim)
for (i in 1:nsim) {
xbar[i]=mean(rexp(n,rate=lambda))
}
hist(xbar)
data(sleep)
head(sleep)
pt(2.5,5,lower.tail=f)
pt(2.5,5,lower.tail=F)
pt(2.5,5,lower.tail=FALSE)
pbinom(6,size=8, prob=.5, Lower.tail=FALSE)
pbinom(6, size=8, prob=.5, Lower.tail=FALSE)
pbinom(6, size=8, prob=.5)
1-pbinom(6, size=8, prob=.5)
ppois(9,5,lower.tail=FALSE)
library(ggplot2)
r.version()
R.version()
R.version()
help
?help
help(r version)
help(R.version)
no<-1000
lamda<-.2
n<-40
set.seed(250)
sim_matrix<-matric(rexp(no*n,rate=lambda),no,n)
sim_matrix<-matrix(rexp(no*n,rate=lambda),no,n)
hist(sim_mean)
package(ggplot2)
package(ggplot2)
set.seed(3)
lambda <- 0.2
num_sim <- 1000
sample_size <- 40
sim <- matrix(rexp(num_sim*sample_size, rate=lambda), num_sim, sample_size)
row_means <- rowMeans(sim)
# plot the histogram of averages
hist(row_means, breaks=50, prob=TRUE,
main="Distribution of averages of samples,
drawn from exponential distribution with lambda=0.2",
xlab="")
# density of the averages of samples
lines(density(row_means))
# theoretical center of distribution
abline(v=1/lambda, col="red")
# theoretical density of the averages of samples
xfit <- seq(min(row_means), max(row_means), length=100)
yfit <- dnorm(xfit, mean=1/lambda, sd=(1/lambda/sqrt(sample_size)))
lines(xfit, yfit, pch=22, col="red", lty=2)
# add legend
legend('topright', c("simulation", "theoretical"), lty=c(1,2), col=c("black", "red"))
clr
clear
set.seed(999)
rate<-,2
rate<-.2
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
et.seed(3)
lambda <- 0.2
num_sim <- 1000
sample_size <- 40
sim <- matrix(rexp(num_sim*sample_size, rate=lambda), num_sim, sample_size)
row_means <- rowMeans(sim)
data(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs, levels=c(0,1), labels=c('Straight Engine','V Engine'))
mtcars$am <- factor(mtcars$am, levels=c(0,1), labels=c('Automatic', 'Manual'))
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
transmission_type <- lm(mpg~am, data= mtcars)
all_variables <- lm(mpg ~ ., data= mtcars)
stepwise <- step(all_variables, direction = "backward")
summary(transmission_type)
summary(all_variables)
summary(stepwise)
summary(transmission_type), summary(all_variables), summary(stepwise)
summary(transmission_type, all_variables, stepwise)
summary(transmission_type)
summary(transmission_type), summary(stepwise)
summary(transmission_type,stepwise)
summary(stepwise)
summary(transmission_type)
summary(stepwise, main="ss")
anova(transmission_type, all_variables, stepwise)
Summary(stepwise)
summary(stepwise)
t.test(mpg~am, data=mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
dfbetas(fit)
library(MASS)
?shuttle
shuttle$use.binary <- as.integer(shuttle$use == "auto")
fit <- glm(use.binary ~ wind - 1, data = shuttle, family = binomial)
summary(fit)$coef
unname(exp(coef(fit))[1]/exp(coef(fit))[2])
fit <- glm(use.binary ~ wind + magn - 1, data = shuttle, family = binomial)
exp(coef(fit))
unname(exp(coef(fit))[1]/exp(coef(fit))[2])
fit <- glm(count ~ spray - 1, data = InsectSprays, family = poisson)
coef.exp <- exp(coef(fit))
unname(coef.exp[1] / coef.exp[2])
data(mtcars)
fit1 <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
library(MASS)
data(shuttle)
shuttle$auto <- as.numeric(shuttle$use=="auto")
fit <- glm(auto ~ wind,  binomial,  shuttle)
fit3 <- glm(1-auto ~ wind,  binomial, shuttle)
fit$coefficients
fit3$coefficients
setwd("~/Developing Data Products Course")
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
